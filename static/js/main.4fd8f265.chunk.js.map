{"version":3,"sources":["components/HomePage.jsx","components/Address.jsx","components/Other.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomePage","setActiveStep","validationSchema","yup","name","required","email","pan","aadhar","afhn","mn","formik","useFormik","initialValues","onSubmit","values","console","log","activeStep","className","handleSubmit","TextField","id","label","value","onChange","handleChange","error","touched","Boolean","errors","Button","variant","disabled","type","Address","house","street","landmark","city","country","pin","helperText","onClick","Other","App","useState","src","alt","focusable","viewBox","d","Box","sx","width","Stepper","alternativeLabel","map","Step","StepLabel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAyGeA,MA9Ff,YAAsC,IAAlBC,EAAiB,EAAjBA,cACZC,EAAmBC,IAAW,CAClCC,KAAMD,IAAW,mBAAmBE,SAAS,oBAC7CC,MAAOH,IACG,eACPG,MAAM,uBACND,SAAS,qBACZE,IAAKJ,IAAW,aAAaE,SAAS,mBACtCG,OAAQL,IAAW,qBAAqBE,SAAS,sBACjDI,KAAMN,IACI,yCACPE,SAAS,oBACZK,GAAIP,IAAW,uBAAuBE,SAAS,+BAE3CM,EAASC,YAAU,CACvBC,cAAe,CACbT,KAAM,GACNE,MAAO,GACPC,IAAK,GACLC,OAAQ,GACRC,KAAM,GACNC,GAAI,IAENR,iBAAkBA,EAClBY,SAAU,SAACC,GACTC,QAAQC,IAAIF,GACZd,GAAc,SAACiB,GAAD,OAAgBA,EAAa,QAK/C,OACE,mCACE,uBAAMC,UAAU,QAAQL,SAAUH,EAAOS,aAAzC,UACE,cAACC,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNnB,KAAK,OACLoB,MAAOb,EAAOI,OAAOX,KACrBqB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQxB,MAAQyB,QAAQlB,EAAOmB,OAAO1B,QAEtD,cAACiB,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,QACNnB,KAAK,QACLoB,MAAOb,EAAOI,OAAOT,MACrBmB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQtB,OAASuB,QAAQlB,EAAOmB,OAAOxB,SAEvD,cAACe,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,MACNnB,KAAK,MACLoB,MAAOb,EAAOI,OAAOR,IACrBkB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQrB,KAAOsB,QAAQlB,EAAOmB,OAAOvB,OAErD,cAACc,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,SACNnB,KAAK,SACLoB,MAAOb,EAAOI,OAAOP,OACrBiB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQpB,QAAUqB,QAAQlB,EAAOmB,OAAOtB,UAExD,cAACa,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,kCACNnB,KAAK,OACLoB,MAAOb,EAAOI,OAAON,KACrBgB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQnB,MAAQoB,QAAQlB,EAAOmB,OAAOrB,QAEtD,cAACY,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,gBACNnB,KAAK,KACLoB,MAAOb,EAAOI,OAAOL,GACrBe,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQlB,IAAMmB,QAAQlB,EAAOmB,OAAOpB,MAEpD,uBACA,sBAAKS,UAAU,MAAf,UACE,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAQ,EAApC,kBACA,cAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYE,KAAK,SAAjC,2BCaKC,G,OAxGC,SAAC,GAAuB,IAArBlC,EAAoB,EAApBA,cACXC,EAAmBC,IAAW,CAClCiC,MAAOjC,IAAW,YAAYE,SAAS,mBACvCgC,OAAQlC,IAAW,YAAYE,SAAS,mBACxCiC,SAAUnC,IAAW,YAAYE,SAAS,mBAC1CkC,KAAMpC,IAAW,YAAYE,SAAS,mBACtCmC,QAASrC,IAAW,YAAYE,SAAS,mBACzCoC,IAAKtC,IAAW,YAAYE,SAAS,qBAEjCM,EAASC,YAAU,CACvBC,cAAe,CACbuB,MAAO,GACPC,OAAQ,GACRC,SAAU,GACVC,KAAM,GACNC,QAAS,GACTC,IAAK,IAEPvC,iBAAkBA,EAClBY,SAAU,SAACC,GACTC,QAAQC,IAAIF,MAUhB,OACE,qBAAKI,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACE,iDACA,uBAAMA,UAAU,MAAML,SAAUH,EAAOS,aAAvC,UACE,cAACC,EAAA,EAAD,CACEF,UAAU,UACVI,MAAM,iBACNnB,KAAK,QACLW,OAAQJ,EAAOI,OAAOqB,MACtBX,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQQ,OAASP,QAAQlB,EAAOmB,OAAOM,OACrDM,WAAY/B,EAAOiB,QAAQQ,OAASzB,EAAOmB,OAAOM,QAEpD,cAACf,EAAA,EAAD,CACEF,UAAU,UACVI,MAAM,cACNnB,KAAK,SACLoB,MAAOb,EAAOI,OAAOsB,OACrBZ,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQS,QAAUR,QAAQlB,EAAOmB,OAAOO,QACtDK,WAAY/B,EAAOiB,QAAQS,QAAU1B,EAAOmB,OAAOO,SAErD,cAAChB,EAAA,EAAD,CACEF,UAAU,UACVI,MAAM,WACNnB,KAAK,WACLoB,MAAOb,EAAOI,OAAOuB,SACrBb,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQU,UAAYT,QAAQlB,EAAOmB,OAAOQ,UACxDI,WAAY/B,EAAOiB,QAAQU,UAAY3B,EAAOmB,OAAOQ,WAEvD,cAACjB,EAAA,EAAD,CACEF,UAAU,UACVI,MAAM,OACNnB,KAAK,OACLoB,MAAOb,EAAOI,OAAOwB,KACrBd,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQW,MAAQV,QAAQlB,EAAOmB,OAAOS,MACpDG,WAAY/B,EAAOiB,QAAQW,MAAQ5B,EAAOmB,OAAOS,OAEnD,cAAClB,EAAA,EAAD,CACEF,UAAU,UACVI,MAAM,UACNnB,KAAK,UACLoB,MAAOb,EAAOI,OAAOyB,QACrBf,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQY,SAAWX,QAAQlB,EAAOmB,OAAOU,SACvDE,WAAY/B,EAAOiB,QAAQY,SAAW7B,EAAOmB,OAAOU,UAEtD,cAACnB,EAAA,EAAD,CACEF,UAAU,UACVI,MAAM,UACNnB,KAAK,MACLoB,MAAOb,EAAOI,OAAO0B,IACrBhB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQa,KAAOZ,QAAQlB,EAAOmB,OAAOW,KACnDC,WAAY/B,EAAOiB,QAAQa,KAAO9B,EAAOmB,OAAOW,MAElD,sBAAKtB,UAAU,MAAf,UAEA,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYW,QApEhB,WAClB1C,GAAc,SAACiB,GAAD,OAAgBA,EAAa,MAmErC,kBAGA,cAACa,EAAA,EAAD,CAAQC,QAAQ,YAAYE,KAAK,SAASS,QApE1B,WACtB1C,GAAc,SAACiB,GAAD,OAAgBA,EAAa,MAmErC,+B,2BCnEK0B,G,OA7BD,SAAC,GAAqB,IAApB3C,EAAmB,EAAnBA,cAId,OACI,qCACF,sBAAKkB,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,0CAEF,qBAAKA,UAAU,MAAf,SACE,gDAEF,qBAAKA,UAAU,MAAf,SACE,yDAEF,qBAAKA,UAAU,MAAf,SACE,2DAGF,sBAAMA,UAAU,OAAhB,UAEA,cAACY,EAAA,EAAD,CAAQC,QAAQ,YAAYW,QArBR,WAClB1C,GAAc,SAAAiB,GAAU,OAAEA,EAAW,MAoBvC,kBACA,cAACa,EAAA,EAAD,CAAQC,QAAQ,YAAhB,4BCmCSa,EApDH,WACV,IACA,EAAoCC,mBAAS,GAA7C,mBAAO5B,EAAP,KAAmBjB,EAAnB,KAEA,OACE,sBAAKkB,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBACE4B,IAAI,4DACJC,IAAI,KAEN,qBACE7B,UAAU,uCACV8B,UAAU,QACVC,QAAQ,YACR,cAAY,OAJd,SAME,sBAAMC,EAAE,6OAGZ,qBAAKhC,UAAU,UAAf,SACE,+BACE,4CACA,yCACA,8CACA,2CAGJ,qBAAKA,UAAU,UAAf,SACE,cAACiC,EAAA,EAAD,CAAKC,GAAI,CAAEC,MAAO,QAAlB,SACE,cAACC,EAAA,EAAD,CAASrC,WAAYA,EAAYsC,kBAAgB,EAAjD,SA7BM,CAAC,gBAAiB,mBAAoB,iBA8BnCC,KAAI,SAAClC,GAAD,OACT,cAACmC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAYpC,KADHA,YAOnB,gCACkB,IAAfL,EACC,cAAC,EAAD,CAAUA,WAAYA,EAAYjB,cAAeA,IAC/C,KACY,IAAfiB,EACC,cAAC,EAAD,CAASA,WAAYA,EAAYjB,cAAeA,IAC9C,KACY,IAAfiB,EAAmB,cAAC,EAAD,CAAOA,WAAYA,EAAYjB,cAAeA,IAAmB,YC3C9E2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4fd8f265.chunk.js","sourcesContent":["import \"./home.css\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@mui/material\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nfunction HomePage({ setActiveStep }) {\n  const validationSchema = yup.object({\n    name: yup.string(\"Enter your name\").required(\"Name is required\"),\n    email: yup\n      .string(\"Enter Email\")\n      .email(\"Enter a valid email\")\n      .required(\"Email is required\"),\n    pan: yup.string(\"Enter PAN\").required(\"PAN is required\"),\n    aadhar: yup.number(\"Enter Your Aadhar\").required(\"Aadhar is required\"),\n    afhn: yup\n      .string(\"Enter Applicant's Husband/Father name\")\n      .required(\"Name is required\"),\n    mn: yup.string(\"Enter mother's name\").required(\"Mother's name is required\"),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      pan: \"\",\n      aadhar: \"\",\n      afhn: \"\",\n      mn: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n      setActiveStep((activeStep) => activeStep + 1);\n    },\n  });\n\n  // console.log(formik.values);\n  return (\n    <>\n      <form className=\"homeP\" onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n        />\n        <TextField\n          id=\"text\"\n          label=\"Email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n        />\n        <TextField\n          id=\"text\"\n          label=\"Pan\"\n          name=\"pan\"\n          value={formik.values.pan}\n          onChange={formik.handleChange}\n          error={formik.touched.pan && Boolean(formik.errors.pan)}\n        />\n        <TextField\n          id=\"text\"\n          label=\"Aadhar\"\n          name=\"aadhar\"\n          value={formik.values.aadhar}\n          onChange={formik.handleChange}\n          error={formik.touched.aadhar && Boolean(formik.errors.aadhar)}\n        />\n        <TextField\n          id=\"text\"\n          label=\"Applicant's Father/Husband Name\"\n          name=\"afhn\"\n          value={formik.values.afhn}\n          onChange={formik.handleChange}\n          error={formik.touched.afhn && Boolean(formik.errors.afhn)}\n        />\n        <TextField\n          id=\"text\"\n          label=\"Mother's Name\"\n          name=\"mn\"\n          value={formik.values.mn}\n          onChange={formik.handleChange}\n          error={formik.touched.mn && Boolean(formik.errors.mn)}\n        />\n        <hr />\n        <div className=\"btn\">\n          <Button variant=\"contained\" disabled>Back</Button>\n          <Button variant=\"contained\" type=\"submit\">\n            Next\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default HomePage;\n","import { Button, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport \"./address.css\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nconst Address = ({ setActiveStep }) => {\n  const validationSchema = yup.object({\n    house: yup.string(\"Required\").required(\"Cannot be empty\"),\n    street: yup.string(\"required\").required(\"Cannot be empty\"),\n    landmark: yup.string(\"Required\").required(\"Cannot be empty\"),\n    city: yup.string(\"Required\").required(\"Cannot be empty\"),\n    country: yup.string(\"Required\").required(\"Cannot be empty\"),\n    pin: yup.string(\"Required\").required(\"Cannot be empty\"),\n  });\n  const formik = useFormik({\n    initialValues: {\n      house: \"\",\n      street: \"\",\n      landmark: \"\",\n      city: \"\",\n      country: \"\",\n      pin: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n    },\n  });\n  const handleClick = () => {\n    setActiveStep((activeStep) => activeStep - 1);\n  };\n  const handleIncrement = () => {\n    setActiveStep((activeStep) => activeStep + 1);\n  };\n  // console.log(formik.values);\n  return (\n    <div className=\"contain\">\n      <div className=\"address\">\n        <h4>Current Address</h4>\n        <form className=\"add\" onSubmit={formik.handleSubmit}>\n          <TextField\n            className=\"addText\"\n            label=\"House/Door no.\"\n            name=\"house\"\n            values={formik.values.house}\n            onChange={formik.handleChange}\n            error={formik.touched.house && Boolean(formik.errors.house)}\n            helperText={formik.touched.house && formik.errors.house}\n          />\n          <TextField\n            className=\"addText\"\n            label=\"Street,Area\"\n            name=\"street\"\n            value={formik.values.street}\n            onChange={formik.handleChange}\n            error={formik.touched.street && Boolean(formik.errors.street)}\n            helperText={formik.touched.street && formik.errors.street}\n          />\n          <TextField\n            className=\"addText\"\n            label=\"Landmark\"\n            name=\"landmark\"\n            value={formik.values.landmark}\n            onChange={formik.handleChange}\n            error={formik.touched.landmark && Boolean(formik.errors.landmark)}\n            helperText={formik.touched.landmark && formik.errors.landmark}\n          />\n          <TextField\n            className=\"addText\"\n            label=\"City\"\n            name=\"city\"\n            value={formik.values.city}\n            onChange={formik.handleChange}\n            error={formik.touched.city && Boolean(formik.errors.city)}\n            helperText={formik.touched.city && formik.errors.city}\n          />\n          <TextField\n            className=\"addText\"\n            label=\"Country\"\n            name=\"country\"\n            value={formik.values.country}\n            onChange={formik.handleChange}\n            error={formik.touched.country && Boolean(formik.errors.country)}\n            helperText={formik.touched.country && formik.errors.country}\n          />\n          <TextField\n            className=\"addText\"\n            label=\"Pincode\"\n            name=\"pin\"\n            value={formik.values.pin}\n            onChange={formik.handleChange}\n            error={formik.touched.pin && Boolean(formik.errors.pin)}\n            helperText={formik.touched.pin && formik.errors.pin}\n          />\n          <div className='btn'>\n\n          <Button variant=\"contained\" onClick={handleClick}>\n            Back\n          </Button>\n          <Button variant=\"contained\" type=\"submit\" onClick={handleIncrement}>\n            Next\n          </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Address;\n","import { Button } from \"@mui/material\";\nimport React from \"react\";\nimport \"./other.css\";\nconst Other = ({setActiveStep}) => {\n    const handleDecrement=()=>{\n        setActiveStep(activeStep=>activeStep-1)\n    }\n  return (\n      <>\n    <div className=\"othercontain\">\n      <div className=\"box\">\n        <h5>Selfie</h5>\n      </div>\n      <div className=\"box\">\n        <h5>Pan document</h5>\n      </div>\n      <div className=\"box\">\n        <h5>Aadhar document front</h5>\n      </div>\n      <div className=\"box\">\n        <h5>Aadhar document back</h5>\n      </div>\n    </div>\n      <div  className='btns'>\n\n      <Button variant='contained' onClick={handleDecrement}>Back</Button>\n      <Button variant='contained'>Finish</Button>\n      </div>\n      </>\n  );\n};\n\nexport default Other;\n","import React, { useState } from \"react\";\nimport \"./app.css\";\nimport Stepper from \"@mui/material/Stepper\";\nimport HomePage from \"./components/HomePage\";\nimport Address from \"./components/Address\";\n\nimport { Box } from \"@mui/system\";\nimport { Step, StepLabel } from \"@mui/material\";\nimport Other from \"./components/Other\";\nconst App = () => {\n  const steps = [\"Basic Details\", \"Addresss Details\", \"Other Details\"];\n  const [activeStep, setActiveStep] = useState(0);\n\n  return (\n    <div className=\"container\">\n      <div className=\"white_nav\">\n        <img\n          src=\"https://portal.creditap.in/static/media/logo.60f9d361.svg\"\n          alt=\"\"\n        />\n        <svg\n          className=\"MuiSvgIcon-root DropDown_user__1Ljbc\"\n          focusable=\"false\"\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"></path>\n        </svg>\n      </div>\n      <div className=\"red_nav\">\n        <ul>\n          <li>Dashbooard</li>\n          <li>Profile</li>\n          <li>Applications</li>\n          <li>Blog</li>\n        </ul>\n      </div>\n      <div className=\"stepper\">\n        <Box sx={{ width: \"100%\" }}>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n        </Box>\n      </div>\n      <div>\n        {activeStep === 0 ? (\n          <HomePage activeStep={activeStep} setActiveStep={setActiveStep} />\n        ) : null}\n        {activeStep === 1 ? (\n          <Address activeStep={activeStep} setActiveStep={setActiveStep} />\n        ) : null}\n        {activeStep === 2 ? <Other activeStep={activeStep} setActiveStep={setActiveStep}/> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}